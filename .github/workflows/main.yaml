# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Examples

on:
  push:
    branches: ["main", "devel"]
  pull_request:
    branches: ["main", "devel"]

permissions:
  contents: read

env:
  DAN_NOPROGRESS: 1

jobs:
  build:
    strategy:
      matrix:
        config:
        - name: Windows MSVC
          os: windows-latest
          shell: bash
          with_conan: false
        - name: Windows MINGW64
          os: windows-latest
          msystem: MINGW64
          shell: msys2 {0}
          scan_paths: -p /mingw64/bin
          with_conan: false
        - name: Ubuntu
          os: ubuntu-latest
          shell: bash
          with_conan: true

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    defaults:
      run:
        shell: ${{ matrix.config.shell }}

    steps:
      - uses: actions/checkout@v3
      
      - uses: msys2/setup-msys2@v2
        if: ${{ matrix.config.msystem }}
        with:
          msystem: ${{ matrix.config.msystem }}
          # NOTE: we install defaul msys-gcc because python yarl library does not compile with mingw64-gcc,
          #       while fmt (built within examples) does not compile with defaul msys-gcc :)
          install: >-
            git
            python
            python-pip
            gcc

      - name: Set up Python 3.11
        if: ${{ !matrix.config.msystem }}
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Configure git
        run: |
          # since some examples uses git to apply patches, it requires to be configured
          git config --global user.email "gh-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Install Conan
        if: ${{ matrix.config.with_conan }}
        run: |
          python -m pip install conan
          conan profile detect

      - name: Install dan
        run: |
          python -m pip install --upgrade pip
          python -m pip install .

      # see above note
      - name: Install mingw64-gcc
        if: ${{ matrix.config.msystem }}
        run: |
          pacman -S --noconfirm mingw-w64-x86_64-gcc

      - name: Scan toolchains
        run: |
          dan scan-toolchains -v ${{ matrix.config.scan_paths }}

      - name: Configure
        run: |
          cd examples
          dan configure -v                \
            -t default                    \
            -s install.destination=dist   \
            -o dan-examples.cxx.with_conan=${{ matrix.config.with_conan }}

      - name: Build
        run: |
          cd examples
          dan build -v

      - name: Re-build
        run: |
          cd examples
          dan build -v

      - name: Test
        run: |
          cd examples
          dan test -v
      
      - name: Install
        run: |
          cd examples
          dan install -v
